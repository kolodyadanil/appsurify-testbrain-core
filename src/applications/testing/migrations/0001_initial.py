# -*- coding: utf-8 -*-
# Generated by Django 1.11.13 on 2018-11-05 11:50
from __future__ import unicode_literals

import django.contrib.postgres.fields
import django.contrib.postgres.fields.jsonb
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('project', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Defect',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True, max_length=4000, null=True)),
                ('reason', models.CharField(max_length=255)),
                ('error', models.TextField(max_length=4000)),
                ('matching', models.CharField(blank=True, max_length=255)),
                ('type', models.IntegerField(choices=[(1, 'ENVIRONMENTAL'), (2, 'FLAKY'), (3, 'PROJECT'), (4, 'INVALID TEST'), (5, 'LOCAL')], default=1)),
                ('create_type', models.IntegerField(choices=[(1, 'MANUAL'), (2, 'AUTOMATIC'), (3, 'GIT_IMPORT')], default=1)),
                ('close_type', models.IntegerField(blank=True, choices=[(1, 'FIXED'), (2, 'DUPLICATE'), (3, "WON'T FIX"), (4, 'UNABLE TO REPRODUCE'), (5, 'NOT A BUG')], null=True)),
                ('close_reason', models.CharField(blank=True, default=b'', max_length=255)),
                ('status', models.IntegerField(choices=[(1, 'NEW'), (2, 'IN PROGRESS'), (3, 'READY'), (4, 'CLOSED'), (5, 'VERIFIED')], default=1)),
                ('severity', models.IntegerField(choices=[(4, 'CRITICAL'), (3, 'MAJOR'), (2, 'MINOR'), (1, 'TRIVIAL')], default=1)),
                ('priority', models.IntegerField(default=1)),
                ('discovery_phase', models.CharField(blank=True, max_length=255)),
                ('discovery_method', models.CharField(blank=True, max_length=255)),
                ('origination_phase', models.CharField(blank=True, max_length=255)),
                ('root_cause', models.CharField(blank=True, max_length=255)),
                ('resolution_type', models.CharField(blank=True, max_length=255)),
                ('leakage_reason', models.CharField(blank=True, max_length=255)),
                ('found_date', models.DateTimeField(db_index=True, default=django.utils.timezone.now)),
                ('reopen_date', models.DateTimeField(blank=True, db_index=True, null=True)),
                ('close_date', models.DateTimeField(blank=True, db_index=True, null=True)),
                ('created', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated', models.DateTimeField(auto_now=True, db_index=True)),
            ],
            options={
                'verbose_name': 'Defect',
                'verbose_name_plural': 'Defects',
            },
        ),
        migrations.CreateModel(
            name='DefectAttachment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('file', models.FileField(blank=True, null=True, upload_to='uploads')),
            ],
            options={
                'verbose_name': 'defect attachment',
                'verbose_name_plural': 'defect attachments',
            },
        ),
        migrations.CreateModel(
            name='Step',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('created', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated', models.DateTimeField(auto_now=True, db_index=True)),
            ],
            options={
                'verbose_name': 'step',
                'verbose_name_plural': 'steps',
            },
        ),
        migrations.CreateModel(
            name='Test',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, default='Test #', max_length=1000, null=True)),
                ('description', models.TextField(blank=True, max_length=4000, null=True)),
                ('extra_data', django.contrib.postgres.fields.jsonb.JSONField(blank=True, default={})),
                ('type', models.IntegerField(choices=[(1, 'MANUAL'), (2, 'AUTOMATIC')], default=1)),
                ('tags', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=255), blank=True, size=None)),
                ('lines', django.contrib.postgres.fields.ArrayField(base_field=models.TextField(max_length=4000), blank=True, size=None)),
                ('parameters', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=255), blank=True, size=None)),
                ('meta', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=255), blank=True, size=None)),
                ('priority', models.IntegerField(default=5)),
                ('usage', models.IntegerField(default=0)),
                ('timeout', models.IntegerField(default=300)),
                ('created', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated', models.DateTimeField(auto_now=True, db_index=True)),
            ],
            options={
                'verbose_name': 'test',
                'verbose_name_plural': 'tests',
            },
        ),
        migrations.CreateModel(
            name='TestRun',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=1000, null=True)),
                ('description', models.TextField(blank=True, max_length=4000, null=True)),
                ('meta', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=255), blank=True, size=None)),
                ('extra_data', django.contrib.postgres.fields.jsonb.JSONField(blank=True, default={})),
                ('type', models.IntegerField(choices=[(1, 'MANUAL'), (2, 'COMMIT'), (3, 'TAG')], default=1)),
                ('status', models.IntegerField(choices=[(1, 'WAIT'), (2, 'IN PROGRESS'), (3, 'COMPLETE')], default=1)),
                ('start_date', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('end_date', models.DateTimeField(blank=True, db_index=True, null=True)),
                ('is_local', models.BooleanField(default=False)),
                ('created', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated', models.DateTimeField(auto_now=True, db_index=True)),
                ('lft', models.PositiveIntegerField(db_index=True, editable=False)),
                ('rght', models.PositiveIntegerField(db_index=True, editable=False)),
                ('tree_id', models.PositiveIntegerField(db_index=True, editable=False)),
                ('level', models.PositiveIntegerField(db_index=True, editable=False)),
            ],
            options={
                'ordering': ('-id',),
                'verbose_name': 'test run',
                'verbose_name_plural': 'test runs',
            },
        ),
        migrations.CreateModel(
            name='TestRunResult',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('project_name', models.CharField(max_length=200)),
                ('test_type_name', models.CharField(max_length=200)),
                ('test_suite_name', models.CharField(max_length=255)),
                ('test_suite_target_type', models.IntegerField(default=1)),
                ('test_suite_created', models.DateTimeField(db_index=True)),
                ('test_suite_updated', models.DateTimeField(db_index=True)),
                ('test_run_name', models.CharField(max_length=255)),
                ('test_run_type', models.IntegerField(default=1)),
                ('test_run_status', models.IntegerField(default=1)),
                ('test_run_is_local', models.BooleanField(default=False)),
                ('test_run_start_date', models.DateTimeField(db_index=True)),
                ('test_run_end_date', models.DateTimeField(blank=True, db_index=True, null=True)),
                ('test_run_created', models.DateTimeField(db_index=True)),
                ('test_run_updated', models.DateTimeField(db_index=True)),
                ('area_name', models.CharField(blank=True, max_length=255, null=True)),
                ('area_created', models.DateTimeField(blank=True, db_index=True, null=True)),
                ('area_updated', models.DateTimeField(blank=True, db_index=True, null=True)),
                ('test_name', models.CharField(max_length=1000)),
                ('test_created', models.DateTimeField(db_index=True)),
                ('test_updated', models.DateTimeField(db_index=True)),
                ('step_name', models.CharField(blank=True, max_length=255, null=True)),
                ('step_index_number', models.IntegerField(blank=True, default=0, null=True)),
                ('commit_timestamp', models.DateTimeField(default=django.utils.timezone.now)),
                ('commit_display_id', models.CharField(blank=True, max_length=255, null=True)),
                ('commit_created', models.DateTimeField(blank=True, db_index=True, null=True)),
                ('commit_updated', models.DateTimeField(blank=True, db_index=True, null=True)),
                ('execution_started', models.DateTimeField(blank=True, db_index=True, null=True)),
                ('execution_ended', models.DateTimeField(blank=True, db_index=True, null=True)),
                ('execution_time', models.FloatField(default=0.0)),
                ('is_local', models.BooleanField(default=False)),
                ('status', models.CharField(choices=[('unknown', 'UNKNOWN'), ('pass', 'PASS'), ('fail', 'FAIL'), ('broken', 'BROKEN'), ('not_run', 'NOT RUN - not use'), ('skipped', 'SKIPPED'), ('warning', 'WARNING'), ('error', 'ERROR'), ('pending', 'PENDING'), ('canceled', 'CANCELED'), ('other', 'OTHER'), ('done', 'DONE')], db_index=True, default='unknown', max_length=255)),
                ('meta', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(default=list, max_length=255), blank=True, null=True, size=None)),
                ('result', models.CharField(blank=True, max_length=255)),
                ('stacktrace', models.TextField(blank=True, max_length=16000)),
                ('failure_message', models.TextField(blank=True, max_length=4000)),
                ('log', models.TextField(blank=True, max_length=16000)),
                ('created', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated', models.DateTimeField(auto_now=True, db_index=True)),
            ],
            options={
                'verbose_name': 'test run result',
                'verbose_name_plural': 'test run results',
            },
        ),
        migrations.CreateModel(
            name='TestRunResultAttachment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('order', models.IntegerField(default=0)),
                ('file', models.FileField(blank=True, null=True, upload_to='uploads')),
                ('created', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated', models.DateTimeField(auto_now=True, db_index=True)),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='test_run_result_attachments', to='project.Project')),
                ('test_run', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='test_run_result_attachments', to='testing.TestRun')),
                ('test_run_result', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='test_run_result_attachments', to='testing.TestRunResult')),
            ],
            options={
                'verbose_name': 'test run result attachment',
                'verbose_name_plural': 'test run result attachments',
            },
        ),
        migrations.CreateModel(
            name='TestStep',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('index_number', models.IntegerField(db_index=True, default=0)),
                ('created', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated', models.DateTimeField(auto_now=True, db_index=True)),
                ('step', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='testing.Step')),
                ('test', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='testing.Test')),
            ],
            options={
                'ordering': ('index_number',),
                'verbose_name': 'test step',
                'verbose_name_plural': 'test steps',
            },
        ),
        migrations.CreateModel(
            name='TestSuite',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True, max_length=4000, null=True)),
                ('target_type', models.IntegerField(choices=[(1, 'commit'), (2, 'tag')], default=1)),
                ('auto_raise_defect', models.BooleanField(default=True)),
                ('rerun_all', models.BooleanField(default=True)),
                ('rerun_flaky', models.BooleanField(default=True)),
                ('number_of_reruns', models.IntegerField(default=1)),
                ('auto_close_defect', models.BooleanField(default=True)),
                ('report_after_failure', models.BooleanField(default=True)),
                ('fail_fast', models.BooleanField(default=False)),
                ('test_suite_endpoint', models.CharField(blank=True, default=b'', max_length=255, null=True)),
                ('location_of_tests', models.CharField(blank=True, default=b'', max_length=255, null=True)),
                ('max_number_grouping', models.IntegerField(default=5)),
                ('priority', models.IntegerField(default=1)),
                ('prioritize_defect', models.BooleanField(default=False)),
                ('timeout', models.IntegerField(default=300)),
                ('created', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated', models.DateTimeField(auto_now=True, db_index=True)),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='test_suites', to='project.Project')),
            ],
            options={
                'verbose_name': 'test suite',
                'verbose_name_plural': 'test suites',
            },
        ),
        migrations.CreateModel(
            name='TestType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('rerun_all', models.BooleanField(default=True, help_text='rerun all')),
                ('rerun_flaky', models.BooleanField(default=True, help_text='rerun flaky')),
                ('number_of_reruns', models.IntegerField(default=1)),
                ('report_after_failure', models.BooleanField(default=True)),
                ('max_number_of_thread', models.IntegerField(default=1)),
                ('test_run_endpoint', models.CharField(blank=True, max_length=255)),
                ('timeout', models.IntegerField(default=300)),
                ('created', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated', models.DateTimeField(auto_now=True, db_index=True)),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='test_types', to='project.Project')),
            ],
            options={
                'verbose_name': 'test type',
                'verbose_name_plural': 'test types',
            },
        ),
        migrations.AddField(
            model_name='testsuite',
            name='test_type',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='test_suites', to='testing.TestType'),
        ),
        migrations.AddField(
            model_name='testsuite',
            name='tests',
            field=models.ManyToManyField(blank=True, related_name='test_suites', to='testing.Test'),
        ),
        migrations.AddField(
            model_name='testrunresultattachment',
            name='test_suite',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='test_run_result_attachments', to='testing.TestSuite'),
        ),
    ]
