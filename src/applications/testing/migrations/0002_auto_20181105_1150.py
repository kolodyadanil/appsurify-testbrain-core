# -*- coding: utf-8 -*-
# Generated by Django 1.11.13 on 2018-11-05 11:50
from __future__ import unicode_literals

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import mptt.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('vcs', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('project', '0001_initial'),
        ('testing', '0001_initial'),
    ]

    operations = [
        migrations.AddField(
            model_name='testrunresult',
            name='area',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='test_run_results', to='vcs.Area'),
        ),
        migrations.AddField(
            model_name='testrunresult',
            name='commit',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='test_run_results', to='vcs.Commit'),
        ),
        migrations.AddField(
            model_name='testrunresult',
            name='project',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='test_run_results', to='project.Project'),
        ),
        migrations.AddField(
            model_name='testrunresult',
            name='step',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='test_run_results', to='testing.Step'),
        ),
        migrations.AddField(
            model_name='testrunresult',
            name='test',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='test_run_results', to='testing.Test'),
        ),
        migrations.AddField(
            model_name='testrunresult',
            name='test_run',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='test_run_results', to='testing.TestRun'),
        ),
        migrations.AddField(
            model_name='testrunresult',
            name='test_suite',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='test_run_results', to='testing.TestSuite'),
        ),
        migrations.AddField(
            model_name='testrunresult',
            name='test_type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='test_run_results', to='testing.TestType'),
        ),
        migrations.AddField(
            model_name='testrun',
            name='areas',
            field=models.ManyToManyField(blank=True, related_name='test_runs', to='vcs.Area'),
        ),
        migrations.AddField(
            model_name='testrun',
            name='author',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='test_runs', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='testrun',
            name='commit',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='test_runs', to='vcs.Commit'),
        ),
        migrations.AddField(
            model_name='testrun',
            name='previous_test_run',
            field=mptt.fields.TreeForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='testing.TestRun'),
        ),
        migrations.AddField(
            model_name='testrun',
            name='project',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='test_runs', to='project.Project'),
        ),
        migrations.AddField(
            model_name='testrun',
            name='test_suite',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='test_runs', to='testing.TestSuite'),
        ),
        migrations.AddField(
            model_name='testrun',
            name='tests',
            field=models.ManyToManyField(blank=True, related_name='test_runs', to='testing.Test'),
        ),
        migrations.AddField(
            model_name='test',
            name='area',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='tests', to='vcs.Area'),
        ),
        migrations.AddField(
            model_name='test',
            name='author',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='tests', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='test',
            name='project',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tests', to='project.Project'),
        ),
        migrations.AddField(
            model_name='test',
            name='steps',
            field=models.ManyToManyField(blank=True, through='testing.TestStep', to='testing.Step'),
        ),
        migrations.AddField(
            model_name='step',
            name='project',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='steps', to='project.Project'),
        ),
        migrations.AddField(
            model_name='defectattachment',
            name='defect',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='defect_attachments', to='testing.Defect'),
        ),
        migrations.AddField(
            model_name='defect',
            name='associated_tests',
            field=models.ManyToManyField(blank=True, related_name='associated_defects', to='testing.Test'),
        ),
        migrations.AddField(
            model_name='defect',
            name='caused_by_commits',
            field=models.ManyToManyField(blank=True, related_name='caused_defects', to='vcs.Commit'),
        ),
        migrations.AddField(
            model_name='defect',
            name='caused_by_test_run_results',
            field=models.ManyToManyField(blank=True, related_name='caused_defects', to='testing.TestRunResult'),
        ),
        migrations.AddField(
            model_name='defect',
            name='caused_by_test_runs',
            field=models.ManyToManyField(blank=True, related_name='caused_defects', to='testing.TestRun'),
        ),
        migrations.AddField(
            model_name='defect',
            name='caused_by_test_suites',
            field=models.ManyToManyField(blank=True, related_name='caused_defects', to='testing.TestSuite'),
        ),
        migrations.AddField(
            model_name='defect',
            name='caused_by_tests',
            field=models.ManyToManyField(blank=True, related_name='caused_defects', to='testing.Test'),
        ),
        migrations.AddField(
            model_name='defect',
            name='closed_commit',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='closed_defects', to='vcs.Commit'),
        ),
        migrations.AddField(
            model_name='defect',
            name='closed_test',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='closed_defects', to='testing.Test'),
        ),
        migrations.AddField(
            model_name='defect',
            name='closed_test_run',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='closed_defects', to='testing.TestRun'),
        ),
        migrations.AddField(
            model_name='defect',
            name='closed_test_run_result',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='closed_defects', to='testing.TestRunResult'),
        ),
        migrations.AddField(
            model_name='defect',
            name='closed_test_suite',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='closed_defects', to='testing.TestSuite'),
        ),
        migrations.AddField(
            model_name='defect',
            name='created_by_commit',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='created_defects', to='vcs.Commit'),
        ),
        migrations.AddField(
            model_name='defect',
            name='created_by_test',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='created_defects', to='testing.Test'),
        ),
        migrations.AddField(
            model_name='defect',
            name='created_by_test_run',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='created_defects', to='testing.TestRun'),
        ),
        migrations.AddField(
            model_name='defect',
            name='created_by_test_run_result',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='created_defects', to='testing.TestRunResult'),
        ),
        migrations.AddField(
            model_name='defect',
            name='created_by_test_suite',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='created_defects', to='testing.TestSuite'),
        ),
        migrations.AddField(
            model_name='defect',
            name='found_commits',
            field=models.ManyToManyField(blank=True, related_name='founded_defects', to='vcs.Commit'),
        ),
        migrations.AddField(
            model_name='defect',
            name='found_test_run_results',
            field=models.ManyToManyField(blank=True, related_name='founded_defects', to='testing.TestRunResult'),
        ),
        migrations.AddField(
            model_name='defect',
            name='found_test_runs',
            field=models.ManyToManyField(blank=True, related_name='founded_defects', to='testing.TestRun'),
        ),
        migrations.AddField(
            model_name='defect',
            name='found_test_suites',
            field=models.ManyToManyField(blank=True, related_name='founded_defects', to='testing.TestSuite'),
        ),
        migrations.AddField(
            model_name='defect',
            name='found_tests',
            field=models.ManyToManyField(blank=True, related_name='founded_defects', to='testing.Test'),
        ),
        migrations.AddField(
            model_name='defect',
            name='owner',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='owned_defects', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='defect',
            name='project',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='defects', to='project.Project'),
        ),
        migrations.AddField(
            model_name='defect',
            name='reopen_commits',
            field=models.ManyToManyField(blank=True, related_name='reopened_defects', to='vcs.Commit'),
        ),
        migrations.AddField(
            model_name='defect',
            name='reopen_test_run_results',
            field=models.ManyToManyField(blank=True, related_name='reopened_defects', to='testing.TestRunResult'),
        ),
        migrations.AddField(
            model_name='defect',
            name='reopen_test_runs',
            field=models.ManyToManyField(blank=True, related_name='reopened_defects', to='testing.TestRun'),
        ),
        migrations.AddField(
            model_name='defect',
            name='reopen_test_suites',
            field=models.ManyToManyField(blank=True, related_name='reopened_defects', to='testing.TestSuite'),
        ),
        migrations.AddField(
            model_name='defect',
            name='reopen_tests',
            field=models.ManyToManyField(blank=True, related_name='reopened_defects', to='testing.Test'),
        ),
        migrations.AlterUniqueTogether(
            name='testtype',
            unique_together=set([('project', 'name')]),
        ),
    ]
